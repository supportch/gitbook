'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _head = require('next/head');

var _head2 = _interopRequireDefault(_head);

var _ansiHtml = require("/Users/jpreynat/GitBook/styleguide/node_modules/ansi-html/index.js");

var _ansiHtml2 = _interopRequireDefault(_ansiHtml);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var ErrorDebug = function (_React$Component) {
  _inherits(ErrorDebug, _React$Component);

  function ErrorDebug() {
    _classCallCheck(this, ErrorDebug);

    return _possibleConstructorReturn(this, (ErrorDebug.__proto__ || Object.getPrototypeOf(ErrorDebug)).apply(this, arguments));
  }

  _createClass(ErrorDebug, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          name = _props.name,
          message = _props.message,
          stack = _props.stack,
          path = _props.path;

      return _react2.default.createElement('div', { className: 'errorDebug' }, _react2.default.createElement(_head2.default, null, _react2.default.createElement('meta', { name: 'viewport', content: 'width=device-width, initial-scale=1.0' })), path ? _react2.default.createElement('div', { className: 'heading' }, 'Error in ', path) : null, name === 'ModuleBuildError' ? _react2.default.createElement('pre', { className: 'message', dangerouslySetInnerHTML: { __html: (0, _ansiHtml2.default)(encodeHtml(message)) } }) : _react2.default.createElement('pre', { className: 'message' }, stack), _react2.default.createElement('style', { jsx: true, global: true }, '\n        body {\n          background: #a6004c;\n          margin: 0;\n        }\n      '), _react2.default.createElement('style', { jsx: true }, '\n        .errorDebug {\n          height: 100%;\n          padding: 16px;\n          box-sizing: border-box;\n        }\n\n        .message {\n          font-family: "SF Mono", "Roboto Mono", "Fira Mono", menlo-regular, monospace;\n          font-size: 10px;\n          color: #fbe7f1;\n          margin: 0;\n          white-space: pre-wrap;\n          word-wrap: break-word;\n        }\n\n        .heading {\n          font-family: -apple-system, BlinkMacSystemFont, Roboto, "Segoe UI", "Fira Sans", Avenir, "Helvetica Neue", "Lucida Grande", sans-serif;\n          font-size: 13px;\n          font-weight: bold;\n          color: #ff84bf;\n          margin-bottom: 20pxl\n        }\n      '));
    }
  }], [{
    key: 'getInitialProps',
    value: function getInitialProps(_ref) {
      var err = _ref.err;
      var name = err.name,
          message = err.message,
          stack = err.stack,
          module = err.module;

      return { name: name, message: message, stack: stack, path: module ? module.rawRequest : null };
    }
  }]);

  return ErrorDebug;
}(_react2.default.Component);

exports.default = ErrorDebug;

var encodeHtml = function encodeHtml(str) {
  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');
};

// see color definitions of babel-code-frame:
// https://github.com/babel/babel/blob/master/packages/babel-code-frame/src/index.js

_ansiHtml2.default.setColors({
  reset: ['fff', 'a6004c'],
  darkgrey: 'e54590',
  yellow: 'ee8cbb',
  green: 'f2a2c7',
  magenta: 'fbe7f1',
  blue: 'fff',
  cyan: 'ef8bb9',
  red: 'fff'
});